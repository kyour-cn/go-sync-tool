// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"encoding/json"

	"gorm.io/plugin/soft_delete"
)

const TableNameMemberBusinessScope = "ydd_member_business_scope"

// MemberBusinessScope mapped from table <ydd_member_business_scope>
type MemberBusinessScope struct {
	ID            int32                 `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	ErpUID        string                `gorm:"column:erp_uid;not null;comment:用户erpid" json:"erp_uid"`                          // 用户erpid
	BusinessScope string                `gorm:"column:business_scope;not null;comment:经营范围" json:"business_scope"`               // 经营范围
	MemberID      int32                 `gorm:"column:member_id;not null;comment:用户id" json:"member_id"`                         // 用户id
	Medicinetype  string                `gorm:"column:medicinetype;not null;default:0;comment:经营范围ID （new）" json:"medicinetype"` // 经营范围ID （new）
	DeleteTime    soft_delete.DeletedAt `gorm:"column:delete_time;not null;comment:删除时间" json:"delete_time"`                     // 删除时间
}

// MarshalBinary 支持json序列化
func (m *MemberBusinessScope) MarshalBinary() (data []byte, err error) {
	return json.Marshal(m)
}

// UnmarshalBinary 支持json反序列化
func (m *MemberBusinessScope) UnmarshalBinary(data []byte) error {
	return json.Unmarshal(data, m)
}

// TableName MemberBusinessScope's table name
func (*MemberBusinessScope) TableName() string {
	return TableNameMemberBusinessScope
}
